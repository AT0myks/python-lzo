image: Visual Studio 2022
environment:
  LZO_DIR: "C:\\src\\lzo-2.10"
  matrix:

    # For Python versions available on Appveyor, see
    # http://www.appveyor.com/docs/installed-software#python
    # The list here is complete (excluding Python 2.6, which
    # isn't covered by this document) at the time of writing.

#    - PYTHON: "C:\\Python27"
#      VCVARSALL: "C:\\Program\ Files\ (x86)\\Microsoft\ Visual\ Studio\ 12.0\\VC\\vcvarsall.bat"
#    - PYTHON: "C:\\Python35"
#      VCVARSALL: "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\vcvarsall.bat"
#    - PYTHON: "C:\\Python36"
#      VCVARSALL: "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\vcvarsall.bat"
#    - PYTHON: "C:\\Python37"
#      VCVARSALL: "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\vcvarsall.bat"


    - PYTHON: "C:\\Python37"
      VCVARSALL: "C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\vcvarsall.bat"

#    - PYTHON: "C:\\Python38"
#      VCVARSALL: "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\Common7\\Tools\\vsdevcmd\\ext\\vcvars.bat"

#    - PYTHON: "C:\\Python38-x64"
#      VCVARSALL: "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\Common7\\Tools\\vsdevcmd\\ext\\vcvars.bat x64"


#    - PYTHON: "C:\\Python38"
#      VCVARSALL: "C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\VC\\Auxiliary\\Build\\vcvars32.bat"

    # - PYTHON: "C:\\Python38-x64"
    #   VCVARSALL: "C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\VC\\Auxiliary\\Build\\vcvars64.bat"

    # - PYTHON: "C:\\Python39"
    #   VCVARSALL: "C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\VC\\Auxiliary\\Build\\vcvars32.bat"
    # - PYTHON: "C:\\Python39-x64"
    #   VCVARSALL: "C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\VC\\Auxiliary\\Build\\vcvars64.bat"

    #   DISTUTILS_USE_SDK: "1"
    # - PYTHON: "C:\\Python35-x64"

install:
  - cmd: |
      "%PYTHON%\\python.exe" -m pip install nose
      if not exist C:\\src\\ (md C:\\src\\)
      if not exist C:\\src\\lzo-2.10.tar.gz (curl -fsS http://www.oberhumer.com/opensource/lzo/download/lzo-2.10.tar.gz -o C:\\src\\lzo-2.10.tar.gz)
      "%PYTHON%\\python.exe" tarxfz.py
      dir
      dir c:\src
      dir c:\src\lzo-2.10
      dir c:\src\lzo-2.10\include
      set PROJ_DIR=%cd%
      cd c:\src\lzo-2.10
      call "%VCVARSALL%"
      call c:\src\lzo-2.10\B\win32\vc.bat
      dir c:\src\lzo-2.10
      cd %PROJ_DIR%

build_script:
  - "%PYTHON%\\python.exe setup.py install"

test_script:
  # Put your test command here.
  # If you don't need to build C extensions on 64-bit Python 3.3 or 3.4,
  # you can remove "build.cmd" from the front of the command, as it's
  # only needed to support those cases.
  # Note that you must use the environment variable %PYTHON% to refer to
  # the interpreter you're using - Appveyor does not do anything special
  # to put the Python evrsion you want to use on PATH.
  - "build.cmd %PYTHON%\\python.exe setup.py test"

after_test:
  # This step builds your wheels.
  # Again, you only need build.cmd if you're building C extensions for
  # 64-bit Python 3.3/3.4. And you need to use %PYTHON% to get the correct
  # interpreter
  - "build.cmd %PYTHON%\\python.exe -m pip install wheel"
  - "build.cmd %PYTHON%\\python.exe setup.py sdist bdist_wheel"

artifacts:
  # bdist_wheel puts your built wheel in the dist directory
  - path: dist\*

#on_success:
#  You can use this step to upload your artifacts to a public website.
#  See Appveyor's documentation for more details. Or you can simply
#  access your wheels from the Appveyor "artifacts" tab for your build.
